version: '3'

dotenv: ['.env']

tasks:
  build:    
    desc: Build Application
    cmds:
      - echo "Starting to build app"
      - ./gradlew build
    silent: false

  run:
    desc: Run with log file
    deps: [build]
    cmds:
      - ./gradlew bootRun --info >app.log 2>&1

  dev:
    desc: Run with console log
    deps: [build]
    env:
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
    cmds:
      - ./gradlew bootRun --info

  kamal-setup:
    desc: Setup Kamal for the first time
    cmds:
      - kamal setup

  kamal-deploy:
    desc: Deploy application using Kamal
    cmds:
      - kamal deploy

  kamal-proxy-reboot:
    desc: Reboot and upgrade kamal-proxy on the server
    cmds:
      - kamal proxy reboot

  create-release:
    desc: Create and push a GitHub release
    cmds:
      - |
        # Get current version or generate one
        VERSION=$(date +"%Y.%m.%d-%H%M%S")
        echo "Creating release version: v$VERSION"
        
        # Create git tag
        git tag "v$VERSION"
        git push origin "v$VERSION"
        
        # Create GitHub release
        gh release create "v$VERSION" \
          --title "Release v$VERSION" \
          --notes "Automated release created on $(date)" \
          --latest

  create-secrets:
    desc: Create GitHub secrets from .env file
    cmds:
      - |
        export GITHUB_REPO="muthuishere/dual-crypt"
        export GITHUB_ENVIRONMENT="dev"
        go run secrets.go .env

  docker-build:
    desc: Build Docker image with multi-stage build
    cmds:
      - echo "Building dual-crypt Spring Boot application"
      - echo "Building Docker image"
      - docker build -t dual-crypt:latest .
      - echo "Docker image built successfully!"

  docker-run:
    desc: Run the Docker container
    deps: [docker-build]
    cmds:
      - echo "Starting dual-crypt container"
      - docker run -p 8080:8080 --rm --name dual-crypt dual-crypt:latest

  native-compile:
    desc: Build native executable locally (requires GraalVM)
    cmds:
      - echo "Building native executable with GraalVM"
      - ./gradlew nativeCompile
      - echo "Native executable built at build/native/nativeCompile/"